<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT09PAE9P
        TwBPT08FT09PA09PTwBNTU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT09PAE9P
        TwBPT08XT09PXE9PT6tPT0+iT09PX09PTyZPT08GT09PAFBQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPT08AT09PAE9P
        TwVPT08uT09PgE9PT9FPT0/7T09P/09PT/9PT0/9T09P5U9PT7BPT09sT09PL09PTwpQUFAAT09PAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPT08AT09PAE9P
        TxBPT09MT09PpE9PT+lPT0//T09P+U9PT+FPT0/8T09P7U9PT8VPT0/tT09P/09PT/9PT0/sT09PvE9P
        T3pPT086T09PD09PTwBPT08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPT08AT09PAU9P
        TyNPT09vT09PxU9PT/dPT0//T09P7k9PT65PT09TT09PTk9PT/ZPT0/PT09PHE9PTzBPT09vT09Psk9P
        T+ZPT0/+T09P/09PT/NPT0/IT09PiE9PT0ZPT08UT09PAE9PTwAAAAAAAAAAAAAAAAAAAAAAAAAAAE9P
        TwBPT09ET09P3E9PT/5PT0/9T09P2U9PT4pPT082T09PB09PTwBPT085T09P9k9PT89PT08RT09PAE9P
        TwBPT08HT09PJ09PT2FPT0+lT09P3k9PT/tPT0//T09P909PT8NPT08kT09PAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT09PAE9PT3VPT0//T09P109PT2ZPT08dT09PAU9PTwAAAAAAT09PAE9PTzlPT0/2T09Pz09P
        TxFPT08AAAAAAAAAAABPT08AT09PAE9PTwRPT08fT09PVE9PT5pPT0/vT09P+U9PT0ZPT08AAAAAAAAA
        AAAAAAAAAAAAAAAAAABPT08AT09Pdk9PT/9PT0+VUFBQAE5OTgAAAAAAAAAAAAAAAABPT08AT09POU9P
        T/ZPT0/PT09PEU9PTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPT08AT09PDE9PT8VPT0/8T09PRk9P
        TwAAAAAAAAAAAAAAAAAAAAAAAAAAAE9PTwBPT092T09P/09PT5VQUFAATk5OAAAAAAAAAAAAAAAAAE9P
        TwBPT085T09P9k9PT89PT08RT09PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9PTwBPT08JT09PpU9P
        T9VPT088T09PAAAAAAAAAAAAAAAAAAAAAAAAAAAAT09PAE9PT3ZPT0//T09PlVBQUABOTk4AAAAAAAAA
        AAAAAAAAT09PAE9PTzlPT0/2T09Pz09PTxFPT08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAT09PAE9P
        TwFPT08UT09PGk9PTwdPT08AAAAAAAAAAAAAAAAAAAAAAAAAAABPT08AT09Pdk9PT/9PT0+VUFBQAE5O
        TgBPT08AT09PE09PT0BPT08UT09POE9PT/ZPT0/PT09PEE9PTxBPT09CT09PIk9PTwRPT08AUVFRAAAA
        AABPT08AT09PB09PT4JPT0+oT09PL09PTwAAAAAAAAAAAAAAAAAAAAAAAAAAAE9PTwBPT09jT09P3E9P
        T3xQUFAAT09PFU9PT2NPT0/FT09P+E9PT6BPT09FT09P9U9PT89PT08aT09Pk09PT/lPT0/gT09PpE9P
        T1tPT08gT09PBE9PTwBPT08JT09Pp09PT9dPT088T09PAAAAAAAAAAAAAAAAAAAAAAAAAAAAT09PAE9P
        TwhPT08UT09PJk9PT2tPT0/LT09P+09PT/9PT0//T09P9k9PT6VPT0/1T09P0E9PT31PT0/3T09P9k9P
        T/JPT0//T09P/U9PT99PT0+jT09PWk9PTyFPT08TT09PEU9PTwVPT08AAAAAAAAAAAAAAAAAAAAAAE9P
        TwBPT08BT09PHU9PT3FPT0/QT09P/E9PT/9PT0//T09P/09PT/9PT0//T09P+k9PT/5PT0/zT09P8U9P
        T/lPT091T09POU9PT39PT0/ET09P8k9PT/9PT0/8T09P3k9PT6FPT09YT09PHk9PTwNPT08AAAAAAAAA
        AABPT08BT09PIk9PT3tPT0/WT09P/U9PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09Pmk9PTwpPT08AT09PAE9PTw5PT087T09PgE9PT8VPT0/zT09P/09PT/xPT0/dT09Pm09P
        TyBPT08AAAAAAE9PT4JPT0/bT09P/k9PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT9dPT08qT09PAE9PTwAAAAAAAAAAAE9PTwBOTk4AT09PDk9PTzxPT0+BT09Pyk9P
        T/1PT0/8T09PVk9PTwAAAAAAT09P7k9PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT/9PT0//T09P9U9PT8ZPT0+HT09PRU9PTxVPT08BT09PAAAAAAAAAAAAT09PAE9P
        TwBPT09WT09P+09PT9xPT08jT09PAAAAAABPT09wT09P709PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT/9PT0/nT09Pp09PT6ZPT0/eT09P/E9PT/9PT0/3T09P0k9PT5VPT09ST09PHU9P
        TwNPT08AT09PBk9PT6dPT0//T09Pix0dHQBPT08AAAAAAE9PTwRPT09yT09P9k9PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT/pPT0/RT09Pf09PTy5PT08FT09PBE9PTx9PT09VT09PmU9PT9VPT0/4T09P/09P
        T/tPT0/cT09Po09PT1xPT09UT09P7E9PT+pPT08zT09PAAAAAAAAAAAAT09PAE9PTwdPT0+DT09P+U9P
        T/9PT0//T09P/09PT/lPT0+3T09PWE9PTxRQUFAAT09PAAAAAAAAAAAAAAAAAE9PTwBPT08CT09PF09P
        T0hPT0+KT09PyE9PT/BPT0//T09P+09PT/JPT0//T09Pt09PTwxPT08AAAAAAAAAAAAAAAAAT09PAE9P
        Tx9PT0/YT09P/09PT/9PT0//T09P9k9PT7BPT09lT09PME9PTw1PT08AT09PAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT09PAE9PTwJPT08vT09PoU9PT/pPT0//T09P/09PT/9PT0/wT09PnU9PTzFPT08CT09PAE9P
        TwBPT08AT09Pck9PT/1PT0/dT09PnU9PT81PT0/yT09P/09PT/9PT0/uT09PxE9PT4pPT09NT09PHU9P
        TwRPT08AT09PAE9PTwxPT09AT09Pkk9PT9pPT0/6T09P/09PT/9PT0//T09P/09PT/9PT0//T09P5U9P
        T4VPT08kT09PAE9PTzJPT0/iT09P+k9PT2NPT08AT09PEk9PTztPT091T09Psk9PT+NPT0/8T09P/09P
        T/pPT0/dT09PqU9PT2xPT09tT09PvU9PT/JPT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09P/k9PT9hPT08NT09PqU9PT/9PT0+1T09PDk9PTwAAAAAAUFBQAE9PTwBPT08GT09PI09P
        T1VPT0+TT09PzE9PT/JPT0//T09P/k9PT/5PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT/9PT0/0T09PuE9PT0lPT0/yT09P/09PT+FPT0+lT09PcE9PTz5PT08YT09PBE9P
        TwBPT08AT09PAE9PTwFPT08QT09PP09PT9FPT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT/9PT0/nT09Pn09PT0VPT08NT09PIU9PT51PT0/YT09P9U9PT/9PT0//T09P9k9P
        T9dPT0+qT09PdE9PT0FPT08bT09PBU9PTwBPT09ZT09P809PT+tPT0+VT09P4U9PT/9PT0//T09P/09P
        T/9PT0//T09P/09PT/tPT0/UT09PgU9PTy1PT08ET09PAAAAAABPT08AT09PBE9PTxlPT08+T09PcU9P
        T6dPT0/VT09P9U9PT/9PT0//T09P909PT9pPT0+tT09PhU9PT9tPT0/+T09Pf09PTwNPT086T09Pwk9P
        T/5PT0//T09P/09PT/RPT0+7T09PYk9PTxpPT08BT09PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9P
        TwBPT08AT09PA09PTxZPT087T09PbU9PT6NPT0/ST09P809PT/9PT0//T09P/09PT7NPT08ST09PAE9P
        TwBPT08aT09Pk09PT9pPT0+fT09PRk9PTwxPT08AT09PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE9PTwBPT08AT09PA09PTxRPT084T09PaU9PT6BPT0+sT09PLk9P
        TwBPT08AAAAAAE9PTwBPT08HT09PGU9PTwVPT08AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPT08AT09PAk9P
        TwZPT08AT09PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////5////4D///wAH//wAAP/gAAAf4BDAD+Bw+A/j8P8P4/D/D+Pw
        /w/jgA8P4gABD+AAAA/AAAAHAAAwAwAAfgMAAAfDAAAAhwAAAAeAH4AHwA/wAcAAwACEAAAAB4AAAABw
        AAAABAADgAAAD/gAYH//gPH///n///////8=
</value>
  </data>
</root>