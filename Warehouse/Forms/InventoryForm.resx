<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAACpAAAA4gAAAOIAAADiAAAA4gAAAOIAAADiAAAA4gAA
        AOIAAADiAAAA4gAAAKkAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAOAAAAD+AAAA5gAAAOEAAADhAAAA4gAA
        AOIAAADhAAAA4QAAAOYAAAD+AAAA4AAAAB4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAA4gAAAOYAAAA5AAAAKwAA
        AC0AAAAdAAAAHQAAAC0AAAArAAAAOQAAAOYAAADiAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAADiAAAA4QAA
        AC0AAACnAAAAtgAAACUAAAAlAAAAtgAAAKcAAAAtAAAA4QAAAOIAAAAeAAAADQAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAPAAAAAAAAAAAAAAAAAAAAHgAA
        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
        AOAAAADgAAAA4gAAAOIAAADiAAAAqQAAAA4AAAAAAAAAAAAAAB4AAADiAAAA4AAAAD0AAADfAAAA8wAA
        AMkAAADJAAAA8wAAAN8AAAA9AAAA4AAAAOIAAAAeAAAADQAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAPAAAAAAAAAAAAAAAAAAAAHgAAAOIAAADkAAAAVQAA
        AOQAAADlAAAARgAAAEYAAADlAAAA5AAAAFUAAADkAAAA4gAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeAAAA4AAA
        AP0AAADpAAAA/AAAAPwAAADkAAAA5AAAAPwAAAD8AAAA6QAAAP0AAADgAAAAHgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAACpAAAA4gAAAOIAAADgAAAA4AAAAOIAAADiAAAA4AAAAOAAAADiAAAA4gAAAKkAAAAOAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA8AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAADwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////8AD//+AAf//gAH//4AB//+AAAADgAAAAYAAAAGAAAABgAAn4YAA
        A+GAAAPhgAAB4YGAAeGAACPhgAAD4YAAA+GAAAHhgAAB4YAAM+GAACAhgAAAAYGAAAGAAAABgAAAAYAA
        AAGAAAADgAH//4AB//+AAf//wAP///////8=
</value>
  </data>
</root>